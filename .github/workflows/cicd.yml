name: CI/CD Pipeline

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    name: Test and Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: trailmenu
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Set Gradle Permissions
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run Ktlint Check
        run: ./gradlew ktlintCheck

      - name: Run Tests
        run: ./gradlew test

      - name: Build Application
        run: ./gradlew build

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

#  deploy: # disabled as AWS is too expensive
#    name: Deploy to AWS
#    runs-on: ubuntu-latest
#    needs: build
#    timeout-minutes: 10
#    permissions:
#      id-token: write
#      contents: read
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v5
#
#      - name: Download JAR from build job
#        uses: actions/download-artifact@v4
#        with:
#          name: app-jar
#          path: build/libs
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: arn:aws:iam::360212038017:role/GitHubActionsECRRole
#          retry-max-attempts: 3
#          aws-region: eu-central-1
#
#      - name: Login to Amazon ECR
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Build, Tag, and Push Docker image
#        run: |
#          IMAGE_URI=360212038017.dkr.ecr.eu-central-1.amazonaws.com/trailmenu:latest
#          docker build -t $IMAGE_URI .
#          docker push $IMAGE_URI