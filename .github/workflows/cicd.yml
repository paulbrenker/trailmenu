name: CI/CD Pipeline

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    name: Test and Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: nutrike
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Set Gradle Permissions
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/nutrike" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=user" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=password" >> $GITHUB_ENV

      - name: Run Ktlint Check
        run: ./gradlew ktlintCheck

      - name: Run Tests
        run: ./gradlew test

      - name: Build Application
        run: ./gradlew build

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: build
    #if: github.event_name == 'push' && github.ref == 'refs/heads/main' TODO remove comment

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::360212038017:role/GitHubActionsReadDbSecret
          aws-region: eu-central-1

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Fetch DB secrets
        id: db-secrets
        run: |
          SECRET=$(aws secretsmanager get-secret-value \
            --secret-id arn:aws:secretsmanager:eu-central-1:360212038017:secret:rds!db-1c805310-f50f-4cd6-bc30-3690e1400802-G3OxVI \
            --query SecretString \
            --output text)

          echo "SPRING_DATASOURCE_USERNAME=$(echo $SECRET | jq -r .username)" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=$(echo $SECRET | jq -r .password)" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://$(echo $SECRET | jq -r .host):$(echo $SECRET | jq -r .port)/$(echo $SECRET | jq -r .dbname)" >> $GITHUB_ENV

      - name: Verify env variables
        run: |
          echo "URL=$SPRING_DATASOURCE_URL"
          echo "USER=$SPRING_DATASOURCE_USERNAME"